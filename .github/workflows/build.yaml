name: ci

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x]
    steps:
      - name: SCM
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # Install and test Fronted
      - run: npm --prefix $PWD/client/ install
      - run: npm run build --if-present
      - run: CI=true npm --prefix $PWD/client/ test --coverage --watchAll
      - name: Upload coverage to Codecov
        if: matrix.node-version == '15.x'
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build-and-push-docker-image:
 
   # Triggered only ci was success
    needs: ci
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client/    
    env:
      # TODO: Change variable to your image's name.
      IMAGE_NAME: medooza-stake-client    
      DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
      DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
      DOCKER_HUB_REPO: "gershona/eatthestake"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    #  - name: Set client as working directory
    #    working-directory: ./client 
    #    run: cp .env.dev .env
        # build against more platforms
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          
        # Upload image to Docker Hub  
      - name: docker hub login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 

      - name: Docker hub Push
        run: |
          echo $IMAGE_ID:$VERSION
          echo $DOCKER_HUB_REPO:$VERSION
          docker tag $IMAGE_ID:$VERSION gershona/eatthestake:$VERSION
          docker push gershona/eatthestake:$VERSION
